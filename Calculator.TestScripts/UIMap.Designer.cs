// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Calculator.TestScripts
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddFunction
        /// </summary>
        public void AddFunction()
        {
            #region Variable Declarations
            WpfButton uIItem8Button = this.UICalculatorWindow.UIItem8Button;
            WpfButton uIItemButton = this.UICalculatorWindow.UIItemButton;
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            #endregion

            // Click '8' button
            Mouse.Click(uIItem8Button, new Point(19, 15));

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(26, 16));

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(30, 6));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(20, 47));
        }
        
        /// <summary>
        /// TextBoxResult
        /// </summary>
        public void TextBoxResult()
        {
            #region Variable Declarations
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(181, 21));
        }
        
        /// <summary>
        /// Close_Calculator
        /// </summary>
        public void Close_Calculator()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UICalculatorWindow1.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(25, 18));
        }
        
        /// <summary>
        /// SubtractFunction
        /// </summary>
        public void SubtractFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItem8Button = this.UICalculatorWindow.UIItem8Button;
            WpfButton uIItemButton2 = this.UICalculatorWindow.UIItemButton2;
            WpfButton uIItem6Button = this.UICalculatorWindow.UIItem6Button;
            WpfButton uIItem5Button = this.UICalculatorWindow.UIItem5Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(11, 18));

            // Click '8' button
            Mouse.Click(uIItem8Button, new Point(27, 12));

            // Click '-' button
            Mouse.Click(uIItemButton2, new Point(24, 10));

            // Click '6' button
            Mouse.Click(uIItem6Button, new Point(13, 10));

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(14, 7));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(22, 27));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(154, 19));
        }
        
        /// <summary>
        /// MultiplyFunction
        /// </summary>
        public void MultiplyFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton3 = this.UICalculatorWindow.UIItemButton3;
            WpfButton uIItem6Button = this.UICalculatorWindow.UIItem6Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(8, 7));

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(8, 7));

            // Click '*' button
            Mouse.Click(uIItemButton3, new Point(25, 11));

            // Double-Click '6' button
            Mouse.DoubleClick(uIItem6Button, new Point(17, 16));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(34, 35));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(145, 11));
        }
        
        /// <summary>
        /// DivideFunction
        /// </summary>
        public void DivideFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton4 = this.UICalculatorWindow.UIItemButton4;
            WpfButton uIItem3Button = this.UICalculatorWindow.UIItem3Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(17, 12));

            // Click '/' button
            Mouse.Click(uIItemButton4, new Point(10, 10));

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(22, 12));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(16, 39));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(162, 17));
        }
        
        /// <summary>
        /// SineFunction
        /// </summary>
        public void SineFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uISinButton = this.UICalculatorWindow.UISinButton;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(13, 19));

            // Click 'sin' button
            Mouse.Click(uISinButton, new Point(11, 16));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(14, 45));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(31, 6));
        }
        
        /// <summary>
        /// SinhFunction
        /// </summary>
        public void SinhFunction()
        {
            #region Variable Declarations
            WpfButton uIItem2Button = this.UICalculatorWindow.UIItem2Button;
            WpfButton uIItem3Button = this.UICalculatorWindow.UIItem3Button;
            WpfButton uISinhButton = this.UICalculatorWindow.UISinhButton;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(3, 12));

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(15, 9));

            // Click 'sinh' button
            Mouse.Click(uISinhButton, new Point(26, 8));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(26, 30));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(37, 30));
        }
        
        /// <summary>
        /// CosFunction
        /// </summary>
        public void CosFunction()
        {
            #region Variable Declarations
            WpfButton uIItem3Button = this.UICalculatorWindow.UIItem3Button;
            WpfButton uICosButton = this.UICalculatorWindow.UICosButton;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(21, 11));

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(21, 11));

            // Click 'cos' button
            Mouse.Click(uICosButton, new Point(28, 14));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(18, 31));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(9, 9));
        }
        
        /// <summary>
        /// CoshFunction
        /// </summary>
        public void CoshFunction()
        {
            #region Variable Declarations
            WpfButton uIItem2Button = this.UICalculatorWindow.UIItem2Button;
            WpfButton uIItem7Button = this.UICalculatorWindow.UIItem7Button;
            WpfButton uICoshButton = this.UICalculatorWindow.UICoshButton;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(29, 7));

            // Click '7' button
            Mouse.Click(uIItem7Button, new Point(12, 7));

            // Click 'cosh' button
            Mouse.Click(uICoshButton, new Point(30, 19));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(31, 35));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(66, 14));
        }
        
        /// <summary>
        /// TanFunction
        /// </summary>
        public void TanFunction()
        {
            #region Variable Declarations
            WpfButton uIItem7Button = this.UICalculatorWindow.UIItem7Button;
            WpfButton uIItem8Button = this.UICalculatorWindow.UIItem8Button;
            WpfButton uITanButton = this.UICalculatorWindow.UITanButton;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '7' button
            Mouse.Click(uIItem7Button, new Point(19, 18));

            // Click '8' button
            Mouse.Click(uIItem8Button, new Point(18, 10));

            // Click 'tan' button
            Mouse.Click(uITanButton, new Point(21, 18));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(28, 38));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(47, 19));
        }
        
        /// <summary>
        /// TanhFunction
        /// </summary>
        public void TanhFunction()
        {
            #region Variable Declarations
            WpfButton uIItem2Button = this.UICalculatorWindow.UIItem2Button;
            WpfButton uIItem3Button = this.UICalculatorWindow.UIItem3Button;
            WpfButton uITanhButton = this.UICalculatorWindow.UITanhButton;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(10, 14));

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(25, 13));

            // Click 'tanh' button
            Mouse.Click(uITanhButton, new Point(26, 16));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(29, 41));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(173, 17));
        }
        
        /// <summary>
        /// LogFunction
        /// </summary>
        public void LogFunction()
        {
            #region Variable Declarations
            WpfButton uIItem4Button = this.UICalculatorWindow.UIItem4Button;
            WpfButton uIItem0Button = this.UICalculatorWindow.UIItem0Button;
            WpfButton uILogButton = this.UICalculatorWindow.UILogButton;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '4' button
            Mouse.Click(uIItem4Button, new Point(28, 14));

            // Click '0' button
            Mouse.Click(uIItem0Button, new Point(62, 11));

            // Click 'Log' button
            Mouse.Click(uILogButton, new Point(21, 16));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(32, 20));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(102, 9));
        }
        
        /// <summary>
        /// ExpFunction
        /// </summary>
        public void ExpFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItem1Button = this.UICalculatorWindow.UIItem1Button;
            WpfButton uIExpButton = this.UICalculatorWindow.UIExpButton;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(25, 12));

            // Click '1' button
            Mouse.Click(uIItem1Button, new Point(17, 16));

            // Click 'Exp' button
            Mouse.Click(uIExpButton, new Point(9, 18));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(23, 20));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(127, 13));
        }
        
        /// <summary>
        /// SquareFunction
        /// </summary>
        public void SquareFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIX2Button = this.UICalculatorWindow.UIX2Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(8, 10));

            // Click 'x^2' button
            Mouse.Click(uIX2Button, new Point(24, 8));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(9, 42));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(153, 17));
        }
        
        /// <summary>
        /// PiFunction
        /// </summary>
        public void PiFunction()
        {
            #region Variable Declarations
            WpfButton uIPIButton = this.UICalculatorWindow.UIPIButton;
            WpfButton uIItemButton3 = this.UICalculatorWindow.UIItemButton3;
            WpfButton uIItem2Button = this.UICalculatorWindow.UIItem2Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click 'Pi' button
            Mouse.Click(uIPIButton, new Point(19, 14));

            // Click '*' button
            Mouse.Click(uIItemButton3, new Point(18, 16));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(25, 5));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(22, 30));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(133, 7));
        }
        
        /// <summary>
        /// PlusMinusFunction
        /// </summary>
        public void PlusMinusFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton5 = this.UICalculatorWindow.UIItemButton5;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(26, 15));

            // Click '±' button
            Mouse.Click(uIItemButton5, new Point(13, 13));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(31, 27));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(175, 17));
        }
        
        /// <summary>
        /// PlusMinusFunction1
        /// </summary>
        public void PlusMinusFunction1()
        {
            #region Variable Declarations
            WpfButton uIItemButton2 = this.UICalculatorWindow.UIItemButton2;
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton5 = this.UICalculatorWindow.UIItemButton5;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '-' button
            Mouse.Click(uIItemButton2, new Point(12, 12));

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(30, 15));

            // Click '±' button
            Mouse.Click(uIItemButton5, new Point(21, 17));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(26, 45));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(195, 20));
        }
        
        /// <summary>
        /// SquareRootFunction
        /// </summary>
        public void SquareRootFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton6 = this.UICalculatorWindow.UIItemButton6;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(23, 8));

            // Click '√' button
            Mouse.Click(uIItemButton6, new Point(12, 18));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(17, 20));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(218, 10));
        }
        
        /// <summary>
        /// ModulusFunction
        /// </summary>
        public void ModulusFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton7 = this.UICalculatorWindow.UIItemButton7;
            WpfButton uIItem3Button = this.UICalculatorWindow.UIItem3Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(12, 18));

            // Click '%' button
            Mouse.Click(uIItemButton7, new Point(10, 10));

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(25, 7));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(10, 18));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(186, 14));
        }
        
        /// <summary>
        /// FactorialFunction
        /// </summary>
        public void FactorialFunction()
        {
            #region Variable Declarations
            WpfButton uIItem3Button = this.UICalculatorWindow.UIItem3Button;
            WpfButton uIXButton = this.UICalculatorWindow.UIXButton;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(35, 12));

            // Click 'X!' button
            Mouse.Click(uIXButton, new Point(21, 10));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(13, 37));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(208, 10));
        }
        
        /// <summary>
        /// BackSpaceFunction
        /// </summary>
        public void BackSpaceFunction()
        {
            #region Variable Declarations
            WpfButton uIItem7Button = this.UICalculatorWindow.UIItem7Button;
            WpfButton uIItem8Button = this.UICalculatorWindow.UIItem8Button;
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton8 = this.UICalculatorWindow.UIItemButton8;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '7' button
            Mouse.Click(uIItem7Button, new Point(9, 13));

            // Click '8' button
            Mouse.Click(uIItem8Button, new Point(35, 19));

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(12, 8));

            // Double-Click '←' button
            Mouse.DoubleClick(uIItemButton8, new Point(18, 2));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(18, 12));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(192, 21));
        }
        
        /// <summary>
        /// CEFunction
        /// </summary>
        public void CEFunction()
        {
            #region Variable Declarations
            WpfButton uIItem8Button = this.UICalculatorWindow.UIItem8Button;
            WpfButton uIItemButton3 = this.UICalculatorWindow.UIItemButton3;
            WpfButton uIItem5Button = this.UICalculatorWindow.UIItem5Button;
            WpfButton uICEButton = this.UICalculatorWindow.UICEButton;
            WpfButton uIItem4Button = this.UICalculatorWindow.UIItem4Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '8' button
            Mouse.Click(uIItem8Button, new Point(22, 7));

            // Click '*' button
            Mouse.Click(uIItemButton3, new Point(18, 15));

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(21, 10));

            // Click 'CE' button
            Mouse.Click(uICEButton, new Point(19, 16));

            // Click '4' button
            Mouse.Click(uIItem4Button, new Point(24, 16));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(18, 27));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(184, 15));
        }
        
        /// <summary>
        /// CFunction
        /// </summary>
        public void CFunction()
        {
            #region Variable Declarations
            WpfButton uIItem5Button = this.UICalculatorWindow.UIItem5Button;
            WpfButton uIItemButton2 = this.UICalculatorWindow.UIItemButton2;
            WpfButton uIItem2Button = this.UICalculatorWindow.UIItem2Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfButton uICButton = this.UICalculatorWindow.UICButton;
            #endregion

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(7, 9));

            // Click '-' button
            Mouse.Click(uIItemButton2, new Point(20, 15));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(21, 11));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(26, 39));

            // Click 'C' button
            Mouse.Click(uICButton, new Point(25, 3));
        }
        
        /// <summary>
        /// PeriodFunction
        /// </summary>
        public void PeriodFunction()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton9 = this.UICalculatorWindow.UIItemButton9;
            WpfButton uIItem5Button = this.UICalculatorWindow.UIItem5Button;
            WpfButton uIItemButton = this.UICalculatorWindow.UIItemButton;
            WpfButton uIItem4Button = this.UICalculatorWindow.UIItem4Button;
            WpfButton uIItemButton10 = this.UICalculatorWindow.UIItemButton10;
            WpfButton uIItem6Button = this.UICalculatorWindow.UIItem6Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(16, 20));

            // Click '.' button
            Mouse.Click(uIItemButton9, new Point(14, 15));

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(23, 16));

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(35, 12));

            // Click '4' button
            Mouse.Click(uIItem4Button, new Point(13, 16));

            // Click '.' button
            Mouse.Click(uIItemButton10, new Point(21, 15));

            // Click '6' button
            Mouse.Click(uIItem6Button, new Point(31, 8));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(24, 42));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(180, 18));
        }
        
        /// <summary>
        /// TextBoxResultKey - Use 'TextBoxResultKeyExpectedValues' to pass parameters into this method.
        /// </summary>
        public void TextBoxResultKey()
        {
            #region Variable Declarations
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            #endregion

            // Verify that the 'ControlType' property of 'txtCalculate' text box equals 'Edit'
            Assert.AreEqual(this.TextBoxResultKeyExpectedValues.UITxtCalculateEditControlType, uITxtCalculateEdit.ControlType.ToString());
        }
        
        /// <summary>
        /// Copy - Use 'CopyParams' to pass parameters into this method.
        /// </summary>
        public void Copy()
        {
            #region Variable Declarations
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItem1Button = this.UICalculatorWindow.UIItem1Button;
            WpfEdit uITxtCalculateEdit = this.UICalculatorWindow.UITxtCalculateEdit;
            WpfMenuItem uICopyMenuItem = this.UICalculatorWindow.UITextBoxMeunMenu.UICopyMenuItem;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfMenuItem uIPasteMenuItem = this.UICalculatorWindow.UITextBoxMeunMenu.UIPasteMenuItem;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(23, 14));

            // Click '1' button
            Mouse.Click(uIItem1Button, new Point(20, 16));

            // Right-Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, MouseButtons.Right, ModifierKeys.None, new Point(231, 12));

            // Click 'Copy' menu item
            Mouse.Click(uICopyMenuItem, new Point(10, 7));

            // Type '{Escape}' in '=' button
            Keyboard.SendKeys(uIItemButton1, this.CopyParams.UIItemButton1SendKeys, ModifierKeys.None);

            // Right-Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, MouseButtons.Right, ModifierKeys.None, new Point(224, 16));

            // Click 'Paste' menu item
            Mouse.Click(uIPasteMenuItem, new Point(15, 5));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(26, 29));

            // Click 'txtCalculate' text box
            Mouse.Click(uITxtCalculateEdit, new Point(199, 15));
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WpfButton uIItem3Button = this.UICalculatorWindow.UIItem3Button;
            WpfButton uIItem6Button = this.UICalculatorWindow.UIItem6Button;
            WpfButton uIItemButton = this.UICalculatorWindow.UIItemButton;
            WpfButton uIItem9Button = this.UICalculatorWindow.UIItem9Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            #endregion

            // Verify that the 'ControlType' property of '3' button equals 'Button'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItem3ButtonControlType, uIItem3Button.ControlType.ToString());

            // Verify that the 'ControlType' property of '6' button equals 'Button'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItem6ButtonControlType, uIItem6Button.ControlType.ToString());

            // Verify that the 'ControlType' property of '+' button equals 'Button'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItemButtonControlType, uIItemButton.ControlType.ToString());

            // Verify that the 'ControlType' property of '9' button equals 'Button'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItem9ButtonControlType, uIItem9Button.ControlType.ToString());

            // Verify that the 'ControlType' property of '=' button equals 'Button'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItemButton1ControlType, uIItemButton1.ControlType.ToString());
        }
        
        #region Properties
        public virtual TextBoxResultKeyExpectedValues TextBoxResultKeyExpectedValues
        {
            get
            {
                if ((this.mTextBoxResultKeyExpectedValues == null))
                {
                    this.mTextBoxResultKeyExpectedValues = new TextBoxResultKeyExpectedValues();
                }
                return this.mTextBoxResultKeyExpectedValues;
            }
        }
        
        public virtual CopyParams CopyParams
        {
            get
            {
                if ((this.mCopyParams == null))
                {
                    this.mCopyParams = new CopyParams();
                }
                return this.mCopyParams;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UICalculatorWindow UICalculatorWindow
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        
        public UICalculatorWindow1 UICalculatorWindow1
        {
            get
            {
                if ((this.mUICalculatorWindow1 == null))
                {
                    this.mUICalculatorWindow1 = new UICalculatorWindow1();
                }
                return this.mUICalculatorWindow1;
            }
        }
        #endregion
        
        #region Fields
        private TextBoxResultKeyExpectedValues mTextBoxResultKeyExpectedValues;
        
        private CopyParams mCopyParams;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UICalculatorWindow mUICalculatorWindow;
        
        private UICalculatorWindow1 mUICalculatorWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TextBoxResultKey'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TextBoxResultKeyExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'txtCalculate' text box equals 'Edit'
        /// </summary>
        public string UITxtCalculateEditControlType = "Edit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Copy'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CopyParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Escape}' in '=' button
        /// </summary>
        public string UIItemButton1SendKeys = "{Escape}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of '3' button equals 'Button'
        /// </summary>
        public string UIItem3ButtonControlType = "Button";
        
        /// <summary>
        /// Verify that the 'ControlType' property of '6' button equals 'Button'
        /// </summary>
        public string UIItem6ButtonControlType = "Button";
        
        /// <summary>
        /// Verify that the 'ControlType' property of '+' button equals 'Button'
        /// </summary>
        public string UIItemButtonControlType = "Button";
        
        /// <summary>
        /// Verify that the 'ControlType' property of '9' button equals 'Button'
        /// </summary>
        public string UIItem9ButtonControlType = "Button";
        
        /// <summary>
        /// Verify that the 'ControlType' property of '=' button equals 'Button'
        /// </summary>
        public string UIItemButton1ControlType = "Button";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICalculatorWindow : WpfWindow
    {
        
        public UICalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItem8Button
        {
            get
            {
                if ((this.mUIItem8Button == null))
                {
                    this.mUIItem8Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem8Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnEight";
                    this.mUIItem8Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem8Button;
            }
        }
        
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnAdd";
                    this.mUIItemButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        
        public WpfButton UIItem9Button
        {
            get
            {
                if ((this.mUIItem9Button == null))
                {
                    this.mUIItem9Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem9Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnNine";
                    this.mUIItem9Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem9Button;
            }
        }
        
        public WpfButton UIItemButton1
        {
            get
            {
                if ((this.mUIItemButton1 == null))
                {
                    this.mUIItemButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnEqual";
                    this.mUIItemButton1.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton1;
            }
        }
        
        public WpfEdit UITxtCalculateEdit
        {
            get
            {
                if ((this.mUITxtCalculateEdit == null))
                {
                    this.mUITxtCalculateEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtCalculateEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtCalculate";
                    this.mUITxtCalculateEdit.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUITxtCalculateEdit;
            }
        }
        
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        
        public WpfButton UIItemButton2
        {
            get
            {
                if ((this.mUIItemButton2 == null))
                {
                    this.mUIItemButton2 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton2.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnDifference";
                    this.mUIItemButton2.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton2;
            }
        }
        
        public WpfButton UIItem6Button
        {
            get
            {
                if ((this.mUIItem6Button == null))
                {
                    this.mUIItem6Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem6Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "brnSix";
                    this.mUIItem6Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem6Button;
            }
        }
        
        public WpfButton UIItem5Button
        {
            get
            {
                if ((this.mUIItem5Button == null))
                {
                    this.mUIItem5Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem5Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnFive";
                    this.mUIItem5Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem5Button;
            }
        }
        
        public WpfButton UIItemButton3
        {
            get
            {
                if ((this.mUIItemButton3 == null))
                {
                    this.mUIItemButton3 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton3.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnMultiply";
                    this.mUIItemButton3.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton3;
            }
        }
        
        public WpfButton UIItemButton4
        {
            get
            {
                if ((this.mUIItemButton4 == null))
                {
                    this.mUIItemButton4 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton4.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnDivide";
                    this.mUIItemButton4.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton4;
            }
        }
        
        public WpfButton UIItem3Button
        {
            get
            {
                if ((this.mUIItem3Button == null))
                {
                    this.mUIItem3Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem3Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnThree";
                    this.mUIItem3Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem3Button;
            }
        }
        
        public WpfButton UISinButton
        {
            get
            {
                if ((this.mUISinButton == null))
                {
                    this.mUISinButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISinButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSin";
                    this.mUISinButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUISinButton;
            }
        }
        
        public WpfButton UIItem2Button
        {
            get
            {
                if ((this.mUIItem2Button == null))
                {
                    this.mUIItem2Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem2Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnTwo";
                    this.mUIItem2Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem2Button;
            }
        }
        
        public WpfButton UISinhButton
        {
            get
            {
                if ((this.mUISinhButton == null))
                {
                    this.mUISinhButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISinhButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSinh";
                    this.mUISinhButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUISinhButton;
            }
        }
        
        public WpfButton UICosButton
        {
            get
            {
                if ((this.mUICosButton == null))
                {
                    this.mUICosButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICosButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnCos";
                    this.mUICosButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICosButton;
            }
        }
        
        public WpfButton UIItem7Button
        {
            get
            {
                if ((this.mUIItem7Button == null))
                {
                    this.mUIItem7Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem7Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSeven";
                    this.mUIItem7Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem7Button;
            }
        }
        
        public WpfButton UICoshButton
        {
            get
            {
                if ((this.mUICoshButton == null))
                {
                    this.mUICoshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICoshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnCosh";
                    this.mUICoshButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICoshButton;
            }
        }
        
        public WpfButton UITanButton
        {
            get
            {
                if ((this.mUITanButton == null))
                {
                    this.mUITanButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUITanButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnTan";
                    this.mUITanButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUITanButton;
            }
        }
        
        public WpfButton UITanhButton
        {
            get
            {
                if ((this.mUITanhButton == null))
                {
                    this.mUITanhButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUITanhButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnTanh";
                    this.mUITanhButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUITanhButton;
            }
        }
        
        public WpfButton UIItem4Button
        {
            get
            {
                if ((this.mUIItem4Button == null))
                {
                    this.mUIItem4Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem4Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnFour";
                    this.mUIItem4Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem4Button;
            }
        }
        
        public WpfButton UIItem0Button
        {
            get
            {
                if ((this.mUIItem0Button == null))
                {
                    this.mUIItem0Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem0Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnZero";
                    this.mUIItem0Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem0Button;
            }
        }
        
        public WpfButton UILogButton
        {
            get
            {
                if ((this.mUILogButton == null))
                {
                    this.mUILogButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUILogButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnLog";
                    this.mUILogButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUILogButton;
            }
        }
        
        public WpfButton UIItem1Button
        {
            get
            {
                if ((this.mUIItem1Button == null))
                {
                    this.mUIItem1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem1Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnOne";
                    this.mUIItem1Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem1Button;
            }
        }
        
        public WpfButton UIExpButton
        {
            get
            {
                if ((this.mUIExpButton == null))
                {
                    this.mUIExpButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIExpButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnExp";
                    this.mUIExpButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIExpButton;
            }
        }
        
        public WpfButton UIX2Button
        {
            get
            {
                if ((this.mUIX2Button == null))
                {
                    this.mUIX2Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIX2Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnX2";
                    this.mUIX2Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIX2Button;
            }
        }
        
        public WpfButton UIPIButton
        {
            get
            {
                if ((this.mUIPIButton == null))
                {
                    this.mUIPIButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPIButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnPi";
                    this.mUIPIButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIPIButton;
            }
        }
        
        public WpfButton UIItemButton5
        {
            get
            {
                if ((this.mUIItemButton5 == null))
                {
                    this.mUIItemButton5 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton5.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnPlusMin";
                    this.mUIItemButton5.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton5;
            }
        }
        
        public WpfButton UIItemButton6
        {
            get
            {
                if ((this.mUIItemButton6 == null))
                {
                    this.mUIItemButton6 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton6.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSqrt";
                    this.mUIItemButton6.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton6;
            }
        }
        
        public WpfButton UIItemButton7
        {
            get
            {
                if ((this.mUIItemButton7 == null))
                {
                    this.mUIItemButton7 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton7.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnMod";
                    this.mUIItemButton7.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton7;
            }
        }
        
        public WpfButton UIXButton
        {
            get
            {
                if ((this.mUIXButton == null))
                {
                    this.mUIXButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIXButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnFat";
                    this.mUIXButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIXButton;
            }
        }
        
        public WpfButton UIItemButton8
        {
            get
            {
                if ((this.mUIItemButton8 == null))
                {
                    this.mUIItemButton8 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton8.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnBackSpace";
                    this.mUIItemButton8.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton8;
            }
        }
        
        public WpfButton UICEButton
        {
            get
            {
                if ((this.mUICEButton == null))
                {
                    this.mUICEButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICEButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnCE";
                    this.mUICEButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICEButton;
            }
        }
        
        public WpfButton UICButton
        {
            get
            {
                if ((this.mUICButton == null))
                {
                    this.mUICButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnC";
                    this.mUICButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICButton;
            }
        }
        
        public WpfButton UIItemButton9
        {
            get
            {
                if ((this.mUIItemButton9 == null))
                {
                    this.mUIItemButton9 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton9.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnPeriod";
                    this.mUIItemButton9.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton9;
            }
        }
        
        public WpfButton UIItemButton10
        {
            get
            {
                if ((this.mUIItemButton10 == null))
                {
                    this.mUIItemButton10 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton10.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnPeriod";
                    this.mUIItemButton10.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton10;
            }
        }
        
        public UITextBoxMeunMenu UITextBoxMeunMenu
        {
            get
            {
                if ((this.mUITextBoxMeunMenu == null))
                {
                    this.mUITextBoxMeunMenu = new UITextBoxMeunMenu(this);
                }
                return this.mUITextBoxMeunMenu;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItem8Button;
        
        private WpfButton mUIItemButton;
        
        private WpfButton mUIItem9Button;
        
        private WpfButton mUIItemButton1;
        
        private WpfEdit mUITxtCalculateEdit;
        
        private WinButton mUICloseButton;
        
        private WpfButton mUIItemButton2;
        
        private WpfButton mUIItem6Button;
        
        private WpfButton mUIItem5Button;
        
        private WpfButton mUIItemButton3;
        
        private WpfButton mUIItemButton4;
        
        private WpfButton mUIItem3Button;
        
        private WpfButton mUISinButton;
        
        private WpfButton mUIItem2Button;
        
        private WpfButton mUISinhButton;
        
        private WpfButton mUICosButton;
        
        private WpfButton mUIItem7Button;
        
        private WpfButton mUICoshButton;
        
        private WpfButton mUITanButton;
        
        private WpfButton mUITanhButton;
        
        private WpfButton mUIItem4Button;
        
        private WpfButton mUIItem0Button;
        
        private WpfButton mUILogButton;
        
        private WpfButton mUIItem1Button;
        
        private WpfButton mUIExpButton;
        
        private WpfButton mUIX2Button;
        
        private WpfButton mUIPIButton;
        
        private WpfButton mUIItemButton5;
        
        private WpfButton mUIItemButton6;
        
        private WpfButton mUIItemButton7;
        
        private WpfButton mUIXButton;
        
        private WpfButton mUIItemButton8;
        
        private WpfButton mUICEButton;
        
        private WpfButton mUICButton;
        
        private WpfButton mUIItemButton9;
        
        private WpfButton mUIItemButton10;
        
        private UITextBoxMeunMenu mUITextBoxMeunMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITextBoxMeunMenu : WpfMenu
    {
        
        public UITextBoxMeunMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            this.SearchProperties[WpfMenu.PropertyNames.AutomationId] = "TextBoxMeun";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem UICopyMenuItem
        {
            get
            {
                if ((this.mUICopyMenuItem == null))
                {
                    this.mUICopyMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUICopyMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Copy";
                    this.mUICopyMenuItem.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICopyMenuItem;
            }
        }
        
        public WpfMenuItem UIPasteMenuItem
        {
            get
            {
                if ((this.mUIPasteMenuItem == null))
                {
                    this.mUIPasteMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIPasteMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Paste";
                    this.mUIPasteMenuItem.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIPasteMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mUICopyMenuItem;
        
        private WpfMenuItem mUIPasteMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICalculatorWindow1 : WinWindow
    {
        
        public UICalculatorWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
